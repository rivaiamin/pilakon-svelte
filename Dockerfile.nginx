# Multi-stage build for SvelteKit + Nginx

# Stage 1: Build the SvelteKit application
FROM node:20-alpine AS builder

# Install dependencies only when needed
FROM node:20-alpine AS deps
RUN apk add --no-cache libc6-compat
WORKDIR /app

# Install dependencies based on the preferred package manager
COPY package.json pnpm-lock.yaml* ./
RUN corepack enable pnpm && pnpm i --frozen-lockfile

# Rebuild the source code only when needed
FROM node:20-alpine AS app-builder
WORKDIR /app
COPY --from=deps /app/node_modules ./node_modules
COPY . .

# Accept build arguments for environment variables with defaults
ARG PUBLIC_SUPABASE_URL=https://placeholder.supabase.co
ARG PUBLIC_SUPABASE_ANON_KEY=placeholder_anon_key

# Set environment variables for the build
ENV PUBLIC_SUPABASE_URL=$PUBLIC_SUPABASE_URL
ENV PUBLIC_SUPABASE_ANON_KEY=$PUBLIC_SUPABASE_ANON_KEY

# Generate .svelte-kit directory and build the application
RUN corepack enable pnpm && npx svelte-kit sync && pnpm run build

# Stage 2: Create the runtime image for SvelteKit app
FROM node:20-alpine AS app
WORKDIR /app

ENV NODE_ENV=production

RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 sveltekit

# Copy the built application
COPY --from=app-builder --chown=sveltekit:nodejs /app/build ./build
COPY --from=app-builder --chown=sveltekit:nodejs /app/package.json ./package.json
COPY --from=app-builder --chown=sveltekit:nodejs /app/node_modules ./node_modules

USER sveltekit

EXPOSE 3000

ENV PORT=3000
ENV HOST=0.0.0.0

CMD ["node", "build"]

# Stage 3: Nginx
FROM nginx:alpine AS nginx

# Copy custom nginx configuration
COPY nginx.conf /etc/nginx/nginx.conf

# Create necessary directories and set proper permissions
RUN mkdir -p /var/log/nginx /var/cache/nginx /etc/nginx/conf.d && \
    chown -R nginx:nginx /var/log/nginx /var/cache/nginx /etc/nginx/conf.d

EXPOSE 80

CMD ["nginx", "-g", "daemon off;"]
